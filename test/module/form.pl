package FORM;

use strict;
use warnings;
use utf8;
use open IO => ':encoding(cp932)';
use CGI;
use Encode qw(decode);

#------------------------------------------------------------------------------------------------------------
# モジュールコンストラクタ - new
# 引　数：$throughget（従来の互換性のため保持）
# 戻り値：FORM オブジェクト
#------------------------------------------------------------------------------------------------------------
sub new {
    my $class = shift;
    my $q = CGI->new;

    # フォームパラメータを CGI.pm で一括パースし、内部ハッシュにデコードして格納
    my %form;
    for my $key ($q->param) {
        my @vals = $q->param($key);
        @vals = map {
            my $v = $_;
            # ChMate 用絵文字修正（raw データのまま）
            $v =~ s/((&#[0-9a-zA-Z]+?;)|[0-9♂♀*#])(\xFC)+/$1&#65039;/g;
            # 文字コード変換（CP932 -> 内部 UTF-8）
            $v = decode('cp932', $v);
            # 波ダッシュ・全角チルダ問題
            $v =~ s|〜|～|g;
            $v;
        } @vals;
        # 単一値は先頭を
        $form{$key}        = $vals[0];
        $form{"Raw_$key"} = $vals[0];
        # 複数値は配列として参照を保持
        $form{"ARRAY_$key"} = \@vals;
    }

    my $obj = {
        CGI  => $q,
        FORM => \%form,
    };
    bless $obj, $class;
    return $obj;
}

#------------------------------------------------------------------------------------------------------------
# CGI オブジェクト取得
#------------------------------------------------------------------------------------------------------------
sub modCGI {
    my $this = shift;
    return $this->{CGI};
}

#------------------------------------------------------------------------------------------------------------
# 単一フォーム値取得
#------------------------------------------------------------------------------------------------------------
sub Get {
    my ($this, $key, $default) = @_;
    return exists $this->{FORM}{$key}
         ? $this->{FORM}{$key}
         : defined $default
           ? $default
           : '';
}

#------------------------------------------------------------------------------------------------------------
# フォーム値設定
#------------------------------------------------------------------------------------------------------------
sub Set {
    my ($this, $key, $data) = @_;
    $this->{FORM}{$key} = $data;
}

#------------------------------------------------------------------------------------------------------------
# 値比較
#------------------------------------------------------------------------------------------------------------
sub Equal {
    my ($this, $key, $data) = @_;
    return defined $this->{FORM}{$key}
        && $this->{FORM}{$key} eq $data;
}

#------------------------------------------------------------------------------------------------------------
# 特定フォーム値デコード／配列取得
# 引　数：$key : キー, $f : HTMLエスケープフラグ
# 戻り値：値の配列
#------------------------------------------------------------------------------------------------------------
sub GetAtArray {
    my ($this, $key, $f) = @_;
    my @ret;
    if (my $arr = $this->{FORM}{"ARRAY_$key"}) {
        for my $v (@$arr) {
            my $val = $v;
            if ($f) {
                $val =~ s/"/&quot;/g;
                $val =~ s/</&lt;/g;
                $val =~ s/>/&gt;/g;
                $val =~ s/\r\n|\r|\n/<br>/g;
            }
            push @ret, $val;
        }
    }
    return @ret;
}

#------------------------------------------------------------------------------------------------------------
# 入力チェック - 指定キーリスト
#------------------------------------------------------------------------------------------------------------
sub IsInput {
    my ($this, $pKeys) = @_;
    for my $k (@$pKeys) {
        return 0 if !exists $this->{FORM}{$k} || $this->{FORM}{$k} eq '';
    }
    return 1;
}

#------------------------------------------------------------------------------------------------------------
# 入力チェック - 全項目
#------------------------------------------------------------------------------------------------------------
sub IsInputAll {
    my $this = shift;
    for my $v (values %{ $this->{FORM} }) {
        return 0 if !defined $v || $v eq '';
    }
    return 1;
}

#------------------------------------------------------------------------------------------------------------
# キー存在確認
#------------------------------------------------------------------------------------------------------------
sub IsExist {
    my ($this, $key) = @_;
    return exists $this->{FORM}{$key};
}

#------------------------------------------------------------------------------------------------------------
# 部分文字列検査
#------------------------------------------------------------------------------------------------------------
sub Contain {
    my ($this, $key, $string) = @_;
    return 0 unless exists $this->{FORM}{$key};
    return $this->{FORM}{$key} =~ /\Q$string\E/ ? 1 : 0;
}

#------------------------------------------------------------------------------------------------------------
# リストデータ取得
#------------------------------------------------------------------------------------------------------------
sub GetListData {
    my ($this, $pArray, @list) = @_;
    for my $k (@list) {
        push @$pArray, exists $this->{FORM}{$k} ? $this->{FORM}{$k} : '';
    }
}

#------------------------------------------------------------------------------------------------------------
# 数字チェック
#------------------------------------------------------------------------------------------------------------
sub IsNumber {
    my ($this, $pKeys) = @_;
    for my $k (@$pKeys) {
        return 0 if $this->{FORM}{$k} =~ /[^0-9]/;
    }
    return 1;
}

#------------------------------------------------------------------------------------------------------------
# 英数字チェック
#------------------------------------------------------------------------------------------------------------
sub IsAlphabet {
    my ($this, $pKeys) = @_;
    for my $k (@$pKeys) {
        return 0 if $this->{FORM}{$k} =~ /[^0-9a-zA-Z_@]/;
    }
    return 1;
}

#------------------------------------------------------------------------------------------------------------
# キャップキー用文字列チェック
#------------------------------------------------------------------------------------------------------------
sub IsCapKey {
    my ($this, $pKeys) = @_;
    for my $k (@$pKeys) {
        return 0 if $this->{FORM}{$k} =~ /[^0-9a-zA-Z_\.\+\-\*\/\@\:\!\%\&\(\)\=\~\^]/;
    }
    return 1;
}

#------------------------------------------------------------------------------------------------------------
# 掲示板ディレクトリ名用文字列チェック
#------------------------------------------------------------------------------------------------------------
sub IsBBSDir {
    my ($this, $pKeys) = @_;
    for my $k (@$pKeys) {
        return 0 if $this->{FORM}{$k} =~ /[^0-9a-zA-Z_\-]/;
    }
    return 1;
}

1;
